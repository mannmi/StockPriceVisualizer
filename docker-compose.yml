services:
  python_app:
    build: .
    command: /bin/sh -c "python /app/src/server/yahoo/yahoo_db.py && sleep infinity && sleep infinity || sleep infinity"
    volumes:
      - ./setup/requirements_app.txt:/app/requirements.txt
      - ./setup.py:/app/setup.py
      - ./src/:/app/src/
      - ./docker-compose.yml:/app/docker-compose.yml
    ports:
      - "5000:5000"
    depends_on:
      - db
    environment:
      - FLASK_RUN_HOST=0.0.0.0
      - PYTHONPATH="$PYTHONPATH:/app/:/app/src/"
    networks:
      custom_network:
        ipv4_address: 172.20.0.2
  django_app:
    build: .
    command: /bin/sh -c "chmod +x /app/django_project/run.sh && sleep 5 && /app/django_project/run.sh || sleep infinity"
    volumes:
      - ./setup/requirements_django.txt:/app/requirements.txt
      - ./django_project:/app/django_project
      - ./src:/app/src/
      - ./docker-compose.yml:/app/docker-compose.yml
      - ./tmp_data:/app/tmp_data/
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - FLASK_RUN_HOST=0.0.0.0
      - PYTHONPATH="$PYTHONPATH:/app/:/app/src/"
    networks:
      custom_network:
        ipv4_address: 172.20.0.4

  #db dose not have to be started see condtional code #todo latter add a try catch. mongo is atm mandetory :)
  db:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: 'mydatabase'
      MYSQL_USER: 'myuser'
      MYSQL_PASSWORD: 'mypassword'
      MYSQL_ROOT_PASSWORD: 'myrootpassword'
    ports:
      - '3306:3306'
    volumes:
      - my-db:/var/lib/mysql
      # Add new users to db (? feature for spliting the user for django and data ?)
      #- ./data/mysql:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 1m
      timeout: 10s
      retries: 3
    networks:
      custom_network:
        ipv4_address: 172.20.0.3

  test:
    build: .
    #command: python -m unittest tests
    command: bash -c "python -m unittest discover -s tests"
    volumes:
      - .:/app
      - ./requirements.txt:/app/requirements.txt
    depends_on:
      - db

networks:
  custom_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16


volumes:
  my-db:
  mongo-data: